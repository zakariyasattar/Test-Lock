{"version":3,"sources":["assets/js/teacher_pong.js"],"names":["window","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","cancelRequestAnimFrame","cancelAnimationFrame","webkitCancelRequestAnimationFrame","mozCancelRequestAnimationFrame","oCancelRequestAnimationFrame","msCancelRequestAnimationFrame","clearTimeout","init","paddleHit","canvas","document","getElementById","ctx","getContext","W","innerWidth","H","innerHeight","particles","ball","paddles","mouse","points","fps","particlesCount","flag","particlePos","multipler","startBtn","restartBtn","over","students","isPaused","mc","Hammer","paintCanvas","fillStyle","fillRect","Paddle","pos","h","w","x","y","createParticles","m","radius","vx","Math","random","vy","draw","i","length","p","update","increaseSpd","abs","trackPosition","e","pageX","pageY","isNotMobile","updateScore","fillStlye","font","textAlign","textBaseline","fillText","matchMedia","matches","p1","p2","collides","collideAction","r","gameOver","k","push","multiplier","emitParticles","b","j","par","beginPath","arc","PI","fill","max","submitToLeaderboard","userName","possibleDuplicates","firebase","database","ref","on","snapshot","forEach","childSnapshot","val","split","key","highest","child","remove","populateLeaderboard","jQuery","leaderboard","lb","style","display","once","leaderboardSort","tr","createElement","className","index","br","name","score","status","innerHTML","paddingLeft","appendChild","arr","middle","floor","left","slice","right","leaderboardMerge","indexLeft","result","indexRight","parseInt","concat","getStudent","id","low","mid","high","studentMerge","mergeStudents","animloop","startScreen","btnClick","mx","body","onkeyup","keyCode","addEventListener","width","height","c","strokeStyle","lineWidth","strokeRect","ev","center"],"mappings":";AACAA,OAAOC,iBACED,OAAOE,uBACdF,OAAOG,6BACPH,OAAOI,0BACPJ,OAAOK,wBACPL,OAAOM,yBACP,SAAUC,GACFP,OAAAA,OAAOQ,WAAWD,EAAU,IAAO,KAI7CP,OAAOS,uBACCT,OAAOU,sBACbV,OAAOW,mCACPX,OAAOY,gCACPZ,OAAOa,8BACPb,OAAOc,+BACPC,aAKF,IAiBEC,EACAC,EAlBEC,EAASC,SAASC,eAAe,eACnCC,EAAMH,EAAOI,WAAW,MACxBC,EAAIvB,OAAOwB,WACXC,EAAIzB,OAAO0B,YAAc,GACzBC,EAAY,GACZC,EAAO,GACPC,EAAU,CAAC,GACXC,EAAQ,GACRC,EAAS,EACTC,EAAM,GACNC,EAAiB,GACjBC,EAAO,EACPC,EAAc,GACdC,EAAY,EACZC,EAAW,GACXC,EAAa,GACbC,EAAO,EAGPC,EAAW,GACXC,GAAW,EAEPC,EAAK,IAAIC,OAAOzB,GA8BtB,SAAS0B,IACRvB,EAAIwB,UAAY,QAChBxB,EAAIyB,SAAS,EAAG,EAAGvB,EAAGE,GAIvB,SAASsB,EAAOC,GAEVC,KAAAA,EAAI,EACJC,KAAAA,EAAI,IAGJC,KAAAA,EAAI5B,EAAE,EAAI,KAAK2B,EAAE,EACjBE,KAAAA,EAAY,OAAPJ,EAAgB,EAAIvB,EAAI,KAAKwB,EAoExC,SAASI,EAAgBF,EAAGC,EAAGE,GACzBH,KAAAA,EAAIA,GAAK,EACTC,KAAAA,EAAIA,GAAK,EAETG,KAAAA,OAAS,IAETC,KAAAA,GAA0B,EAAdC,KAAKC,SAAX,IACNC,KAAAA,GAAKL,EAAIG,KAAKC,SAAS,IAI7B,SAASE,IACRhB,IACI,IAAA,IAAIiB,EAAI,EAAGA,EAAIhC,EAAQiC,OAAQD,IAClCE,EAAIlC,EAAQgC,GAEZxC,EAAIwB,UAAY,QAChBxB,EAAIyB,SAASiB,EAAEZ,EAAGY,EAAEX,EAAGW,EAAEb,EAAGa,EAAEd,GAG/BrB,EAAKgC,OACLI,IAID,SAASC,IACLlC,EAAS,GAAK,GACb0B,KAAKS,IAAItC,EAAK4B,IAAM,KACtB5B,EAAK4B,IAAO5B,EAAK4B,GAAK,GAAM,EAAI,EAChC5B,EAAK+B,IAAO/B,EAAK+B,GAAK,GAAM,EAAI,GAMnC,SAASQ,EAAcC,GACtBtC,EAAMqB,EAAIiB,EAAEC,MACZvC,EAAMsB,EAAIgB,EAAEE,MAKb,SAASN,IAcHO,GAXLC,IAEAnD,EAAIoD,UAAY,QAChBpD,EAAIqD,KAAO,yBACXrD,EAAIsD,UAAY,QAChBtD,EAAIuD,aAAe,MACnBvD,EAAIwD,SAAS,0BAA2B7E,OAAOwB,WAAa,GAAI,KAG5CxB,OAAO8E,WAAW,sCAAsCC,SAGxEjD,EAAMqB,GAAKrB,EAAMsB,EACf,IAAA,IAAIS,EAAI,EAAGA,EAAIhC,EAAQiC,OAAQD,IAClCE,EAAIlC,EAAQgC,GACZE,EAAEZ,EAAIrB,EAAMqB,EAAIY,EAAEb,EAAE,EAyDpBhB,GAnDHN,EAAKuB,GAAKvB,EAAK4B,GACf5B,EAAKwB,GAAKxB,EAAK+B,GAGfqB,GAAKnD,EAAQ,GACboD,GAAKpD,EAAQ,GAQVqD,EAAStD,EAAMoD,IACjBG,EAAcvD,EAAMoD,IAIbE,EAAStD,EAAMqD,IACtBE,EAAcvD,EAAMqD,KAMjBrD,EAAKwB,EAAIxB,EAAKwD,EAAI3D,GACpBG,EAAKwB,EAAI3B,EAAIG,EAAKwD,EAClBC,KAGOzD,EAAKwB,EAAI,IAChBxB,EAAKwB,EAAIxB,EAAKwD,EACdC,KAKEzD,EAAKuB,EAAIvB,EAAKwD,EAAI7D,GACpBK,EAAK4B,IAAM5B,EAAK4B,GAChB5B,EAAKuB,EAAI5B,EAAIK,EAAKwD,GAGXxD,EAAKuB,EAAGvB,EAAKwD,EAAI,IACxBxD,EAAK4B,IAAM5B,EAAK4B,GAChB5B,EAAKuB,EAAIvB,EAAKwD,IAOL,GAARlD,EACE,IAAA,IAAIoD,EAAI,EAAGA,EAAIrD,EAAgBqD,IAClC3D,EAAU4D,KAAK,IAAIlC,EAAgBlB,EAAYgB,EAAGhB,EAAYiB,EAAGoC,aAKnEC,IAGAvD,EAAO,EAYR,SAASgD,EAASQ,EAAG3B,GACjB2B,GAAAA,EAAEvC,EAAIvB,EAAKwD,GAAKrB,EAAEZ,GAAKuC,EAAEvC,EAAIvB,EAAKwD,GAAIrB,EAAEZ,EAAIY,EAAEb,EAC7CwC,OAAAA,EAAEtC,GAAMW,EAAEX,EAAIW,EAAEd,GAAMc,EAAEX,EAAI,GAC9BnC,EAAY,GACL,GAGAyE,EAAEtC,GAAKW,EAAEd,GAAY,GAAPc,EAAEX,IACvBnC,EAAY,GACL,GAQV,SAASkE,EAAcvD,EAAMmC,GAC5BnC,EAAK+B,IAAM/B,EAAK+B,GAEA,GAAb1C,GACFW,EAAKwB,EAAIW,EAAEX,EAAIW,EAAEd,EACjBd,EAAYiB,EAAIxB,EAAKwB,EAAIxB,EAAKwD,EAC9BI,YAAc,GAGM,GAAbvE,IACPW,EAAKwB,EAAIW,EAAEd,EAAIrB,EAAKwD,EACpBjD,EAAYiB,EAAIxB,EAAKwB,EAAIxB,EAAKwD,EAC9BI,WAAa,GAGdzD,IACAkC,IAEA9B,EAAYgB,EAAIvB,EAAKuB,EACrBjB,EAAO,EAIR,SAASuD,IACJ,IAAA,IAAIE,EAAI,EAAGA,EAAIhE,EAAUmC,OAAQ6B,IACpCC,IAAMjE,EAAUgE,GAEhBtE,EAAIwE,YACJxE,EAAIwB,UAAY,QACZ+C,IAAIrC,OAAS,GAChBlC,EAAIyE,IAAIF,IAAIzC,EAAGyC,IAAIxC,EAAGwC,IAAIrC,OAAQ,EAAW,EAARE,KAAKsC,IAAM,GAEjD1E,EAAI2E,OAEJJ,IAAIzC,GAAKyC,IAAIpC,GACboC,IAAIxC,GAAKwC,IAAIjC,GAGbiC,IAAIrC,OAASE,KAAKwC,IAAIL,IAAIrC,OAAS,IAAM,GAM3C,SAASiB,IACRnD,EAAIoD,UAAY,QAChBpD,EAAIqD,KAAO,yBACXrD,EAAIsD,UAAY,OAChBtD,EAAIuD,aAAe,MACnBvD,EAAIwD,SAAS,UAAY9C,EAAQ,GAAI,IAItC,SAASsD,IACRhE,EAAIoD,UAAY,QAChBpD,EAAIqD,KAAO,yBACXrD,EAAIsD,UAAY,SAChBtD,EAAIuD,aAAe,SACnBvD,EAAIwD,SAAS,0BAA0B9C,EAAO,WAAYR,EAAE,EAAGE,EAAE,EAAI,IAErEyE,EAAoBC,UAGpB1F,uBAAuBO,GAGvBuB,EAAO,EAGPD,EAAWsB,OAGZ,SAASsC,EAAoBC,GACxBC,IAAAA,EAAqB,GAEzBC,SAASC,WAAWC,IAAI,eAAehB,KAAK,WAAaY,EAAW,IAAMpE,GAEzEsE,SAASC,WAAWC,IAAI,eAAeC,GAAG,QAAS,SAASC,GAC3DA,EAASC,QAAQ,SAASC,GACtBR,GAAYQ,EAAcC,MAAMC,MAAM,KAAK,IAC7CT,EAAmBb,KAAKoB,EAAcC,MAAQ,IAAMD,EAAcG,OAKhE,IAFAC,IAAAA,GAAW,UAEPlD,EAAI,EAAGA,EAAIuC,EAAmBtC,OAAQD,IAC1CuC,EAAmBvC,GAAGgD,MAAM,KAAK,GAAKE,IACxCA,EAAUX,EAAmBvC,GAAGgD,MAAM,KAAK,IAIzChD,IAAAA,EAAI,EAAGA,EAAIuC,EAAmBtC,OAAQD,IACtCuC,EAAmBvC,GAAGgD,MAAM,KAAK,IAAME,GACzCV,SAASC,WAAWC,IAAI,eAAeS,MAAMZ,EAAmBvC,GAAGgD,MAAM,KAAK,IAAII,WAMvF,SAASC,IACRC,OAAO,OAAOF,SACdE,OAAO,OAAOF,SAEVG,IAAAA,EAAc,GACdC,EAAKlG,SAASC,eAAe,SAEjCD,SAASC,eAAe,QAAQkG,MAAMC,QAAU,OAChDpG,SAASC,eAAe,eAAekG,MAAMC,QAAU,UACtDpG,SAASC,eAAe,QAAQkG,MAAMC,QAAU,OAEjDlB,SAASC,WAAWC,IAAI,eAAeiB,KAAK,QAAS,SAASf,GAC7DA,EAASC,QAAQ,SAASC,GACzBS,EAAY7B,KAAKoB,EAAcC,WAIjCpG,WAAW,WAGN,IAAA,IAAIqD,GAFRuD,EAAcK,EAAgBL,IAENtD,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC5C6D,IAAAA,EAAKvG,SAASwG,cAAc,MAChCD,EAAGE,UAAU,KAETC,IA4BAC,EA5BAD,EAAQ1G,SAASwG,cAAc,MAC/BI,EAAO5G,SAASwG,cAAc,MAC9BK,EAAQ7G,SAASwG,cAAc,MAC/BM,EAAS9G,SAASwG,cAAc,MAejC9D,GAbHgE,EAAMK,UAAYd,EAAYtD,OAASD,EACvCgE,EAAMP,MAAMa,YAAc,OAE1BJ,EAAKG,UAAYd,EAAYvD,GAAGgD,MAAM,KAAK,GAC3CkB,EAAKH,UAAY,OACjBG,EAAKT,MAAMa,YAAc,OAEzBH,EAAME,UAAYd,EAAYvD,GAAGgD,MAAM,KAAK,GAC5CmB,EAAMV,MAAMa,YAAc,OAE1BF,EAAOC,UAAYd,EAAYvD,GAAGgD,MAAM,KAAK,GAC7CoB,EAAOX,MAAMa,YAAc,OAExBtE,GAAKuD,EAAYtD,OAAS,GACxBgE,EAAK3G,SAASwG,cAAc,OAC7BC,UAAY,KACfP,EAAGe,YAAYN,GAEhBJ,EAAGU,YAAYP,GACfH,EAAGU,YAAYL,GACfL,EAAGU,YAAYJ,GACfN,EAAGU,YAAYH,GACfZ,EAAGe,YAAYV,IACXI,EAAK3G,SAASwG,cAAc,OAC7BC,UAAY,KACfP,EAAGe,YAAYN,KAEd,KAKJ,SAASL,EAAiBY,GACpBA,GAAc,GAAdA,EAAIvE,OAECuE,OAAAA,EAGHC,IAAAA,EAAS7E,KAAK8E,MAAMF,EAAIvE,OAAS,GACjC0E,EAAOH,EAAII,MAAM,EAAGH,GACpBI,EAAQL,EAAII,MAAMH,GAEjBK,OAAAA,EACLlB,EAAgBe,GAChBf,EAAgBiB,IAKpB,SAASC,EAAkBH,EAAME,GAKxBE,IAJHC,IAAAA,EAAS,GACTD,EAAY,EACZE,EAAa,EAEVF,EAAYJ,EAAK1E,QAAUgF,EAAaJ,EAAM5E,QAC/CiF,SAASP,EAAKI,GAAW/B,MAAM,KAAK,IAAMkC,SAASL,EAAMI,GAAYjC,MAAM,KAAK,KAClFgC,EAAOtD,KAAKiD,EAAKI,IACjBA,MAEAC,EAAOtD,KAAKmD,EAAMI,IAClBA,KAIGD,OAAAA,EAAOG,OAAOR,EAAKC,MAAMG,IAAYI,OAAON,EAAMD,MAAMK,IAGjE,SAASG,EAAWC,GAKXC,IADHA,IAAsCC,EAAtCD,EAAO,EAAIE,GAHf7G,EAAW8G,EAAa9G,IAGOsB,OAAQ,EAChCqF,GAAOE,GAAK,CAEZ7G,GADH4G,EAAM3F,KAAK8E,OAAOY,EAAIE,GAAM,GACzB7G,EAAS4G,GAAKvC,MAAM,KAAK,IAAIqC,EAAI,OAAO1G,EAAS4G,GAC3C5G,EAAS4G,GAAKvC,MAAM,KAAK,GAAGqC,EAAIC,EAAMC,EAAI,EAC9CC,EAAOD,EAAI,EAEb,OAAC,EAIV,SAASE,EAAcjB,GACjBA,GAAe,IAAfA,EAAIvE,OAECuE,OAAAA,EAGHC,IAAAA,EAAS7E,KAAK8E,MAAMF,EAAIvE,OAAS,GACjC0E,EAAOH,EAAII,MAAM,EAAGH,GACpBI,EAAQL,EAAII,MAAMH,GAEjBiB,OAAAA,EACLD,EAAad,GACbc,EAAaZ,IAKjB,SAASa,EAAcf,EAAME,GAKpBE,IAJHC,IAAAA,EAAS,GACTD,EAAY,EACZE,EAAa,EAEVF,EAAYJ,EAAK1E,QAAUgF,EAAaJ,EAAM5E,QAC/C0E,EAAKI,GAAW/B,MAAM,KAAK,GAAK6B,EAAMI,GAAYjC,MAAM,KAAK,IAC/DgC,EAAOtD,KAAKiD,EAAKI,IACjBA,MAEAC,EAAOtD,KAAKmD,EAAMI,IAClBA,KAIGD,OAAAA,EAAOG,OAAOR,EAAKC,MAAMG,IAAYI,OAAON,EAAMD,MAAMK,IAKjE,SAASU,IACRxI,EAAOf,iBAAiBuJ,GACxB5F,IAID,SAAS6F,IACR7F,IACAvB,EAASuB,OAIV,SAAS8F,EAAStF,GAGbuF,IAAAA,EAAKvF,EAAEC,MACJD,EAAEE,MAGNqF,GAAMtH,EAASc,GAAKwG,GAAMtH,EAASc,EAAId,EAASa,IAClDsG,IAGAnH,EAAW,IAID,GAARE,GACCoH,GAAMrH,EAAWa,GAAKwG,GAAMrH,EAAWa,EAAIb,EAAWY,IACxDtB,EAAKuB,EAAI,GACTvB,EAAKwB,EAAI,GACTrB,EAAS,EACTH,EAAK4B,GAAK,EACV5B,EAAK+B,GAAK,EACV6F,IAEAjH,EAAO,GApiBRpB,SAASyI,KAAKC,QAAU,SAASzF,GACd,IAAbA,EAAE0F,UACFrH,GAKH+G,IACA/G,GAAW,IALXhC,uBAAuBO,GACvByB,GAAW,KASd4D,SAASC,WAAWC,IAAI,YAAYC,GAAG,QAAS,SAASC,GACxDA,EAASC,QAAQ,SAASC,GACzBnE,EAAS+C,KAAKoB,EAAcC,WAKhC1F,EAAO6I,iBAAiB,YAAa5F,GAAe,GACpDjD,EAAO6I,iBAAiB,YAAaL,GAAU,GAG/CxI,EAAO8I,MAAQzI,EACfL,EAAO+I,OAASxI,EAqBhBI,EAAQ0D,KAAK,IAAIxC,EAAO,WACxBlB,EAAQ0D,KAAK,IAAIxC,EAAO,QAGxBnB,EAAO,CACNuB,EAAG,GACHC,EAAG,GACHgC,EAAG,EACH8E,EAAG,QACH1G,GAAI,EACJG,GAAI,EAGJC,KAAM,WACLvC,EAAIwE,YACJxE,EAAIwB,UAAY,KAAKqH,EACrB7I,EAAIyE,IAAI,KAAK3C,EAAG,KAAKC,EAAG,KAAKgC,EAAG,EAAW,EAAR3B,KAAKsC,IAAM,GAC9C1E,EAAI2E,SAMN3D,EAAW,CACVa,EAAG,IACHD,EAAG,GACHE,EAAG5B,EAAE,EAAI,GACT6B,EAAG3B,EAAE,EAAI,GAETmC,KAAM,WACLvC,EAAI8I,YAAc,QAClB9I,EAAI+I,UAAY,IAChB/I,EAAIgJ,WAAW,KAAKlH,EAAG,KAAKC,EAAG,KAAKF,EAAG,KAAKD,GAE5C5B,EAAIqD,KAAO,yBACXrD,EAAIsD,UAAY,SAChBtD,EAAIuD,aAAe,SACnBvD,EAAIoD,UAAY,QAChBpD,EAAIwD,SAAS,QAAStD,EAAE,EAAGE,EAAE,KAK/Ba,EAAa,CACZY,EAAG,IACHD,EAAG,GACHE,EAAG5B,EAAE,EAAI,GACT6B,EAAG3B,EAAE,EAAI,GAETmC,KAAM,WACLvC,EAAI8I,YAAc,QAClB9I,EAAI+I,UAAY,IAChB/I,EAAIgJ,WAAW,KAAKlH,EAAG,KAAKC,EAAG,KAAKF,EAAG,KAAKD,GAE5C5B,EAAIqD,KAAO,yBACXrD,EAAIsD,UAAY,SAChBtD,EAAIuD,aAAe,SACnBvD,EAAIoD,UAAY,QAChBpD,EAAIwD,SAAS,UAAWtD,EAAE,EAAGE,EAAE,EAAI,MAuIrCiB,EAAG8D,GAAG,MAAO,SAAS8D,GACjB,IAAA,IAAIzG,EAAI,EAAGA,EAAIhC,EAAQiC,OAAQD,IAClCE,EAAIlC,EAAQgC,GACZE,EAAEZ,EAAImH,EAAGC,OAAOpH,EAAIY,EAAEb,IAwTxBuG","file":"teacher_pong.8f99adb7.js","sourceRoot":"..","sourcesContent":["// RequestAnimFrame: a browser API for getting smooth animations\nwindow.requestAnimFrame = (function(){\n\treturn  window.requestAnimationFrame ||\n\t\twindow.webkitRequestAnimationFrame ||\n\t\twindow.mozRequestAnimationFrame    ||\n\t\twindow.oRequestAnimationFrame      ||\n\t\twindow.msRequestAnimationFrame     ||\n\t\tfunction( callback ){\n\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t};\n})();\n\nwindow.cancelRequestAnimFrame = ( function() {\n\treturn window.cancelAnimationFrame            ||\n\t\twindow.webkitCancelRequestAnimationFrame    ||\n\t\twindow.mozCancelRequestAnimationFrame       ||\n\t\twindow.oCancelRequestAnimationFrame         ||\n\t\twindow.msCancelRequestAnimationFrame        ||\n\t\tclearTimeout\n} )();\n\n\n// Initialize canvas and required variables\nvar canvas = document.getElementById(\"pong-canvas\"),\n\t\tctx = canvas.getContext(\"2d\"), // Create canvas context\n\t\tW = window.innerWidth, // Window's width\n\t\tH = window.innerHeight - 55\t, // Window's height\n\t\tparticles = [], // Array containing particles\n\t\tball = {}, // Ball object\n\t\tpaddles = [3], // Array containing two paddles\n\t\tmouse = {}, // Mouse object to store it's current position\n\t\tpoints = 0, // Varialbe to store points\n\t\tfps = 60, // Max FPS (frames per second)\n\t\tparticlesCount = 20, // Number of sparks when ball strikes the paddle\n\t\tflag = 0, // Flag variable which is changed on collision\n\t\tparticlePos = {}, // Object to contain the position of collision\n\t\tmultipler = 1, // Varialbe to control the direction of sparks\n\t\tstartBtn = {}, // Start button object\n\t\trestartBtn = {}, // Restart button object\n\t\tover = 0, // flag varialbe, cahnged when the game is over\n\t\tinit, // variable to initialize animation\n\t\tpaddleHit,\n\t\tstudents = [],\n\t\tisPaused = false;\n\n\t\tvar mc = new Hammer(canvas);\n\n\t\tdocument.body.onkeyup = function(e){\n\t    if(e.keyCode == 32){\n\t\t\t\tif(!isPaused){\n\t\t\t\t\tcancelRequestAnimFrame(init);\n\t\t\t\t\tisPaused = true;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tanimloop();\n\t\t\t\t\tisPaused = false;\n\t\t\t\t}\n\t\t   }\n\t\t }\n\n\t firebase.database().ref('Students').on('value', function(snapshot) {\n\t \tsnapshot.forEach(function(childSnapshot) {\n\t \t\tstudents.push(childSnapshot.val());\n\t \t});\n\t });\n\n// Add mousemove and mousedown events to the canvas\ncanvas.addEventListener(\"mousemove\", trackPosition, true);\ncanvas.addEventListener(\"mousedown\", btnClick, true);\n\n// Set the canvas's height and width to full screen\ncanvas.width = W;\ncanvas.height = H;\n\n// Function to paint canvas\nfunction paintCanvas() {\n\tctx.fillStyle = \"black\";\n\tctx.fillRect(0, 0, W, H);\n}\n\n// Function for creating paddles\nfunction Paddle(pos) {\n\t// Height and width\n\tthis.h = 5;\n\tthis.w = 150;\n\n\t// Paddle's position\n\tthis.x = W/2 - this.w/2;\n\tthis.y = (pos == \"top\") ? 0 : H - this.h;\n\n}\n\n// Push two new paddles into the paddles[] array\npaddles.push(new Paddle(\"bottom\"));\npaddles.push(new Paddle(\"top\"));\n\n// Ball object\nball = {\n\tx: 50,\n\ty: 50,\n\tr: 5,\n\tc: \"white\",\n\tvx: 4,\n\tvy: 8,\n\n\t// Function for drawing ball on canvas\n\tdraw: function() {\n\t\tctx.beginPath();\n\t\tctx.fillStyle = this.c;\n\t\tctx.arc(this.x, this.y, this.r, 0, Math.PI*2, false);\n\t\tctx.fill();\n\t}\n};\n\n\n// Start Button object\nstartBtn = {\n\tw: 100,\n\th: 50,\n\tx: W/2 - 50,\n\ty: H/2 - 25,\n\n\tdraw: function() {\n\t\tctx.strokeStyle = \"white\";\n\t\tctx.lineWidth = \"2\";\n\t\tctx.strokeRect(this.x, this.y, this.w, this.h);\n\n\t\tctx.font = \"18px Arial, sans-serif\";\n\t\tctx.textAlign = \"center\";\n\t\tctx.textBaseline = \"middle\";\n\t\tctx.fillStlye = \"white\";\n\t\tctx.fillText(\"Start\", W/2, H/2 );\n\t}\n};\n\n// Restart Button object\nrestartBtn = {\n\tw: 100,\n\th: 50,\n\tx: W/2 - 50,\n\ty: H/2 - 50,\n\n\tdraw: function() {\n\t\tctx.strokeStyle = \"white\";\n\t\tctx.lineWidth = \"2\";\n\t\tctx.strokeRect(this.x, this.y, this.w, this.h);\n\n\t\tctx.font = \"18px Arial, sans-serif\";\n\t\tctx.textAlign = \"center\";\n\t\tctx.textBaseline = \"middle\";\n\t\tctx.fillStlye = \"white\";\n\t\tctx.fillText(\"Restart\", W/2, H/2 - 25 );\n\t}\n};\n\n// Function for creating particles object\nfunction createParticles(x, y, m) {\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n\tthis.radius = 1.2;\n\n\tthis.vx = -1.5 + Math.random()*3;\n\tthis.vy = m * Math.random()*1.5;\n}\n\n// Draw everything on canvas\nfunction draw() {\n\tpaintCanvas();\n\tfor(var i = 0; i < paddles.length; i++) {\n\t\tp = paddles[i];\n\n\t\tctx.fillStyle = \"white\";\n\t\tctx.fillRect(p.x, p.y, p.w, p.h);\n\t}\n\n\tball.draw();\n\tupdate();\n}\n\n// Function to increase speed after every 5 points\nfunction increaseSpd() {\n\tif(points % 4 == 0) {\n\t\tif(Math.abs(ball.vx) < 15) {\n\t\t\tball.vx += (ball.vx < 0) ? -1 : 1;\n\t\t\tball.vy += (ball.vy < 0) ? -2 : 2;\n\t\t}\n\t}\n}\n\n// Track the position of mouse cursor\nfunction trackPosition(e) {\n\tmouse.x = e.pageX;\n\tmouse.y = e.pageY;\n}\n\n// Function to update positions, score and everything.\n// Basically, the main game logic is defined here\nfunction update() {\n\n\t// Update scores\n\tupdateScore();\n\n\tctx.fillStlye = \"white\";\n\tctx.font = \"16px Arial, sans-serif\";\n\tctx.textAlign = \"right\";\n\tctx.textBaseline = \"top\";\n\tctx.fillText(\"Press 'space' to pause \", window.innerWidth - 20, 20 );\n\n\t// Move the paddles on mouse move\n\tvar isNotMobile = !(window.matchMedia(\"only screen and (max-width: 760px)\").matches);\n\n  if (isNotMobile) {\n\t\tif(mouse.x && mouse.y) {\n\t\t\tfor(var i = 1; i < paddles.length; i++) {\n\t\t\t\tp = paddles[i];\n\t\t\t\tp.x = mouse.x - p.w/2;\n\t\t\t}\n\t\t}\n  }\n\n\t// Move the ball\n\tball.x += ball.vx;\n\tball.y += ball.vy;\n\n\t// Collision with paddles\n\tp1 = paddles[1];\n\tp2 = paddles[2];\n\n\t// If the ball strikes with paddles,\n\t// invert the y-velocity vector of ball,\n\t// increment the points, play the collision sound,\n\t// save collision's position so that sparks can be\n\t// emitted from that position, set the flag variable,\n\t// and change the multiplier\n\tif(collides(ball, p1)) {\n\t\tcollideAction(ball, p1);\n\t}\n\n\n\telse if(collides(ball, p2)) {\n\t\tcollideAction(ball, p2);\n\t}\n\n\telse {\n\t\t// Collide with walls, If the ball hits the top/bottom,\n\t\t// walls, run gameOver() function\n\t\tif(ball.y + ball.r > H) {\n\t\t\tball.y = H - ball.r;\n\t\t\tgameOver();\n\t\t}\n\n\t\telse if(ball.y < 0) {\n\t\t\tball.y = ball.r;\n\t\t\tgameOver();\n\t\t}\n\n\t\t// If ball strikes the vertical walls, invert the\n\t\t// x-velocity vector of ball\n\t\tif(ball.x + ball.r > W) {\n\t\t\tball.vx = -ball.vx;\n\t\t\tball.x = W - ball.r;\n\t\t}\n\n\t\telse if(ball.x -ball.r < 0) {\n\t\t\tball.vx = -ball.vx;\n\t\t\tball.x = ball.r;\n\t\t}\n\t}\n\n\n\n\t// If flag is set, push the particles\n\tif(flag == 1) {\n\t\tfor(var k = 0; k < particlesCount; k++) {\n\t\t\tparticles.push(new createParticles(particlePos.x, particlePos.y, multiplier));\n\t\t}\n\t}\n\n\t// Emit particles/sparks\n\temitParticles();\n\n\t// reset flag\n\tflag = 0;\n}\n\nmc.on('pan', function(ev) {\n\tfor(var i = 1; i < paddles.length; i++) {\n\t\tp = paddles[i];\n\t\tp.x = ev.center.x - p.w;\n\t}\n});\n\n//Function to check collision between ball and one of\n//the paddles\nfunction collides(b, p) {\n\tif(b.x + ball.r >= p.x && b.x - ball.r <=p.x + p.w) {\n\t\tif(b.y >= (p.y - p.h) && p.y > 0){\n\t\t\tpaddleHit = 1;\n\t\t\treturn true;\n\t\t}\n\n\t\telse if(b.y <= p.h && p.y == 0) {\n\t\t\tpaddleHit = 2;\n\t\t\treturn true;\n\t\t}\n\n\t\telse return false;\n\t}\n}\n\n//Do this when collides == true\nfunction collideAction(ball, p) {\n\tball.vy = -ball.vy;\n\n\tif(paddleHit == 1) {\n\t\tball.y = p.y - p.h;\n\t\tparticlePos.y = ball.y + ball.r;\n\t\tmultiplier = -1;\n\t}\n\n\telse if(paddleHit == 2) {\n\t\tball.y = p.h + ball.r;\n\t\tparticlePos.y = ball.y - ball.r;\n\t\tmultiplier = 1;\n\t}\n\n\tpoints++;\n\tincreaseSpd();\n\n\tparticlePos.x = ball.x;\n\tflag = 1;\n}\n\n// Function for emitting particles\nfunction emitParticles() {\n\tfor(var j = 0; j < particles.length; j++) {\n\t\tpar = particles[j];\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = \"white\";\n\t\tif (par.radius > 0) {\n\t\t\tctx.arc(par.x, par.y, par.radius, 0, Math.PI*2, false);\n\t\t}\n\t\tctx.fill();\n\n\t\tpar.x += par.vx;\n\t\tpar.y += par.vy;\n\n\t\t// Reduce radius so that the particles die after a few seconds\n\t\tpar.radius = Math.max(par.radius - 0.05, 0.0);\n\n\t}\n}\n\n// Function for updating score\nfunction updateScore() {\n\tctx.fillStlye = \"white\";\n\tctx.font = \"16px Arial, sans-serif\";\n\tctx.textAlign = \"left\";\n\tctx.textBaseline = \"top\";\n\tctx.fillText(\"Score: \" + points, 20, 20 );\n}\n\n// Function to run when the game overs\nfunction gameOver() {\n\tctx.fillStlye = \"white\";\n\tctx.font = \"20px Arial, sans-serif\";\n\tctx.textAlign = \"center\";\n\tctx.textBaseline = \"middle\";\n\tctx.fillText(\"Game Over - You scored \"+points+\" points!\", W/2, H/2 + 25 );\n\n\tsubmitToLeaderboard(userName);\n\n\t// Stop the Animation\n\tcancelRequestAnimFrame(init);\n\n\t// Set the over flag\n\tover = 1;\n\n\t// Show the restart button\n\trestartBtn.draw();\n}\n\nfunction submitToLeaderboard(userName) {\n\tvar possibleDuplicates = [];\n\n\tfirebase.database().ref('leaderboard').push(\"Teacher;\" + userName + \";\" + points);\n\n\t\tfirebase.database().ref('leaderboard').on('value', function(snapshot) {\n\t\t\tsnapshot.forEach(function(childSnapshot) {\n\t\t\t\tif(userName == childSnapshot.val().split(\";\")[1]) {\n\t\t\t\t\tpossibleDuplicates.push(childSnapshot.val() + \";\" + childSnapshot.key);\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar highest = -111111111;\n\n\t\t\tfor(var i = 0; i < possibleDuplicates.length; i++) {\n\t\t\t\tif(possibleDuplicates[i].split(\";\")[2] > highest) {\n\t\t\t\t\thighest = possibleDuplicates[i].split(\";\")[2];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(i = 0; i < possibleDuplicates.length; i++) {\n\t\t\t\tif(possibleDuplicates[i].split(\";\")[2] != highest) {\n\t\t\t\t\tfirebase.database().ref('leaderboard').child(possibleDuplicates[i].split(\";\")[3]).remove();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n}\n\nfunction populateLeaderboard() {\n\tjQuery('.tr').remove();\n\tjQuery('.br').remove();\n\n\tvar leaderboard = [];\n\tvar lb = document.getElementById('table');\n\n\tdocument.getElementById('pong').style.display = \"none\";\n\tdocument.getElementById('leaderboard').style.display = \"initial\";\n  document.getElementById('main').style.display = \"none\";\n\n\tfirebase.database().ref('leaderboard').once('value', function(snapshot){\n\t\tsnapshot.forEach(function(childSnapshot) {\n\t\t\tleaderboard.push(childSnapshot.val());\n\t\t});\n\t});\n\n\tsetTimeout(function(){\n\t\tleaderboard = leaderboardSort(leaderboard);\n\n\t\tfor(var i = leaderboard.length - 1; i >= 0; i--) {\n\t\t\tvar tr = document.createElement('tr');\n\t\t\ttr.className=\"tr\";\n\n\t\t\tvar index = document.createElement('td');\n\t\t\tvar name = document.createElement('td');\n\t\t\tvar score = document.createElement('td');\n\t\t\tvar status = document.createElement('td');\n\n\t\t\tindex.innerHTML = leaderboard.length - i;\n\t\t\tindex.style.paddingLeft = \"20px\";\n\n\t\t\tname.innerHTML = leaderboard[i].split(\";\")[1];\n\t\t\tname.className = \"name\";\n\t\t\tname.style.paddingLeft = \"10px\";\n\n\t\t\tscore.innerHTML = leaderboard[i].split(\";\")[2];\n\t\t\tscore.style.paddingLeft = \"10px\";\n\n\t\t\tstatus.innerHTML = leaderboard[i].split(\";\")[0];\n\t\t\tstatus.style.paddingLeft = \"10px\";\n\n\t\t\tif(i == leaderboard.length - 1) {\n\t\t\t\tvar br = document.createElement('br');\n\t\t\t\tbr.className = \"br\";\n\t\t\t\tlb.appendChild(br);\n\t\t\t}\n\t\t\ttr.appendChild(index);\n\t\t\ttr.appendChild(name);\n\t\t\ttr.appendChild(score);\n\t\t\ttr.appendChild(status);\n\t\t\tlb.appendChild(tr);\n\t\t\tvar br = document.createElement('br');\n\t\t\tbr.className = \"br\";\n\t\t\tlb.appendChild(br);\n\t\t}\n\t}, 150);\n\n}\n\n//implement merge sort for leaderboard\nfunction leaderboardSort (arr) {\n  if (arr.length == 1) {\n    // return once we hit an array with a single item\n    return arr;\n  }\n\n  const middle = Math.floor(arr.length / 2) // get the middle item of the array rounded down\n  const left = arr.slice(0, middle) // items on the left side\n  const right = arr.slice(middle) // items on the right side\n\n  return leaderboardMerge(\n    leaderboardSort(left),\n    leaderboardSort(right)\n  )\n}\n\n// compare the arrays item by item and return the concatenated result\nfunction leaderboardMerge (left, right) {\n  let result = []\n  let indexLeft = 0\n  let indexRight = 0\n\n  while (indexLeft < left.length && indexRight < right.length) {\n    if (parseInt(left[indexLeft].split(\";\")[1]) < parseInt(right[indexRight].split(\";\")[1])) {\n      result.push(left[indexLeft])\n      indexLeft++\n    } else {\n      result.push(right[indexRight])\n      indexRight++\n    }\n  }\n\n  return result.concat(left.slice(indexLeft)).concat(right.slice(indexRight))\n}\n\nfunction getStudent(id) {\n  students = studentMerge(students);\n\n  //binary search for finding ID pos\n  var low  = 0 , high = students.length -1 ,mid ;\n  while (low <= high){\n      mid = Math.floor((low+high)/2);\n      if(students[mid].split(\";\")[0]==id) return students[mid];\n      else if (students[mid].split(\";\")[0]<id) low = mid+1;\n      else high = mid-1;\n  }\n  return -1 ;\n}\n\n//implement merge sort\nfunction studentMerge (arr) {\n  if (arr.length === 1) {\n    // return once we hit an array with a single item\n    return arr\n  }\n\n  const middle = Math.floor(arr.length / 2) // get the middle item of the array rounded down\n  const left = arr.slice(0, middle) // items on the left side\n  const right = arr.slice(middle) // items on the right side\n\n  return mergeStudents(\n    studentMerge(left),\n    studentMerge(right)\n  )\n}\n\n// compare the arrays item by item and return the concatenated result\nfunction mergeStudents(left, right) {\n  let result = []\n  let indexLeft = 0\n  let indexRight = 0\n\n  while (indexLeft < left.length && indexRight < right.length) {\n    if (left[indexLeft].split(\";\")[0] < right[indexRight].split(\";\")[0]) {\n      result.push(left[indexLeft])\n      indexLeft++\n    } else {\n      result.push(right[indexRight])\n      indexRight++\n    }\n  }\n\n  return result.concat(left.slice(indexLeft)).concat(right.slice(indexRight))\n}\n\n\n// Function for running the whole animation\nfunction animloop() {\n\tinit = requestAnimFrame(animloop);\n\tdraw();\n}\n\n// Function to execute at startup\nfunction startScreen() {\n\tdraw();\n\tstartBtn.draw();\n}\n\n// On button click (Restart and start)\nfunction btnClick(e) {\n\n\t// Variables for storing mouse position on click\n\tvar mx = e.pageX,\n\t\t\tmy = e.pageY;\n\n\t// Click start button\n\tif(mx >= startBtn.x && mx <= startBtn.x + startBtn.w) {\n\t\tanimloop();\n\n\t\t// Delete the start button after clicking it\n\t\tstartBtn = {};\n\t}\n\n\t// If the game is over, and the restart button is clicked\n\tif(over == 1) {\n\t\tif(mx >= restartBtn.x && mx <= restartBtn.x + restartBtn.w) {\n\t\t\tball.x = 20;\n\t\t\tball.y = 20;\n\t\t\tpoints = 0;\n\t\t\tball.vx = 4;\n\t\t\tball.vy = 8;\n\t\t\tanimloop();\n\n\t\t\tover = 0;\n\t\t}\n\t}\n}\n\n// Show the start screen\nstartScreen();\n"]}